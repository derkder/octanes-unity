AssetBundle是将资源使用Unity提供的一种用于存储资源的压缩格式打包后的集合，它可以存储任何一种Unity可以识别的资源，如模型，纹理图，音频，场景等资源。也可以加载开发者自定义的二进制文件。
他们的文件类型是.assetbundle/.unity3d,他们先前被设计好，很容易就下载到我们的游戏或者场景当中。

一般情况下AssetBundle的具体开发流程如下：
（1）创建Asset bundle，开发者在unity编辑器中通过脚本将所需要的资源打包成AssetBundle文件。
（2）上传服务器。开发者将打包好的AssetBundle文件上传至服务器中。使得游戏客户端能够获取当前的资源，进行游戏的更新。
（3）下载AssetBundle，首先将其下载到本地设备中，然后再通过AsstBudle的加载模块将资源加到游戏之中。
（4）加载，通过Unity提供的API可以加载资源里面包含的模型、纹理图、音频、动画、场景等来更新游戏客户端。
（5）卸载AssetBundle，卸载之后可以节省内存资源，并且要保证资源的正常更新。
如果是本地的话：
  Unity编辑器可以理解为一个大型的虚拟机，会根据当前选择的平台将放入工程的资源自动转化（勾选AutoRefresh）为目标平台资源存入工程的Library目录，在打包阶段，Unity根据打包脚本
 从Library中提取对应资源，打包成对应的assetbundle，最终游戏资源都以单个assetbundle的形式存在，参考：https://docs.unity3d.com/cn/current/Manual/AssetBundlesIntro.html


关于ab路径上文件的用途：（我发现我貌似应该知道这个....）
一个AB包对应两个文件，其中一个只包含资源内容本身，无后缀是一个二进制压缩文件，另外一个后缀为.manifest是对这个AB包的描述文件，其中描述了AB包中的资源列表以及依赖关系。
  （依赖关系：例如，一个AssetBundle中的material可以引用另一个AssetBundle中的texture。）
相对aa来说，是bundle和settings.json啥的应该




具体怎么打ab包
https://blog.csdn.net/qq_31967569/article/details/102625217
https://docs.unity3d.com/cn/current/Manual/AssetBundles-Workflow.html



Addresables相比于AssetBundle的优点：（ChatGPT）
1、使用AssetBundles进行动态加载时，需要！！！！手动管理资源的引用和卸载！！！，并且需要考虑！！！资源的依赖关系和加载的顺序！！！！，比较容易出现资源泄漏和加载错误的问题。
  相比之下，Addressables提供了更强大、更简单的动态加载机制，可以更方便地管理资源的依赖关系和加载流程，降低了出错的风险，提高了开发效率和代码可维护性。因此，如果需要频繁进行动态加载的话，使用Addressables会更为方便和高效。
2、对于跨平台的支持：
  AssetBundles也可以实现跨平台使用，但需要分别为每个平台打包不同的AssetBundles。这意味着为了支持多个平台，需要构建和维护多个AssetBundles版本，并且需要处理这些版本之间的依赖关系和兼容性问题。
  相比之下，Addressables提供了更加通用和高效的资源管理机制，可以在不同平台之间共享和重用资源，无需重新构建和打包多个版本。这意味着，使用Addressables可以更加轻松地实现跨平台兼容性，并且可以减少资源的重复使用，提高开发效率和代码可维护性。
